/*
   piawgcli
   Copyright (C) 2021  Derek Battams <derek@battams.ca>

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
package actions

import (
	"strings"
	"testing"

	"github.com/stretchr/testify/require"
	"gitlab.com/ddb_db/piawgcli/internal/net/piaclient"
)

func TestTemplateProcessing(t *testing.T) {
	expected := `### Generated by piawgcli: submit feature requests & bug reports at https://gitlab.com/ddb_db/piawgcli
### Generated on 10
### This config file is suitable for use by wg-quick
### Please consider donating if you find this tool useful: http://bit.ly/piawgcli
[Interface]
PrivateKey = 8
Address = 6/32

# Peer: rId/rName
[Peer]
PublicKey = 2
AllowedIPs = 0.0.0.0/0
Endpoint = 4:3
PersistentKeepalive = 25

# ServerVirtualIP: 5
# ClientPublicKey: 7`
	iface := piaclient.PiaInterface{
		Status:           "1",
		ServerPublicKey:  "2",
		ServerPort:       3,
		ServerEndpoint:   "4",
		ServerVirtualIp:  "5",
		ClientIp:         "6",
		ClientPublicKey:  "7",
		ClientPrivateKey: "8",
		PiaRegion: piaclient.PiaRegion{
			Name: "rName",
			Id:   "rId",
		},
		CreatedOn: "10",
	}
	result, err := processTemplate(wgConfTmpl, iface)
	if err != nil {
		t.Errorf("unexpected error processing template: %w", err)
	}
	require.Equal(t, expected, strings.Trim(strings.ReplaceAll(result, "\r", ""), "\r\n"))
}
